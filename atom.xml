<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo-wmの博客</title>
  <subtitle>只有拚搏，才是充实的生活。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-06T09:00:55.878Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Min Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端PC兼容问题总结</title>
    <link href="http://yoursite.com/2017/06/19/%E5%89%8D%E7%AB%AFPC%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/06/19/前端PC兼容问题总结/</id>
    <published>2017-06-19T13:28:03.000Z</published>
    <updated>2017-07-06T09:00:55.878Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>1.如果图片加a标签在IE9-中会有边框 </p>
<p>  解决方案：<br></p>
<pre><code>img{border:none;}
</code></pre></li>
<li><p>2.rgba不支持IE8</p>
<p>  解决方案：可以用 opacity</p>
<pre><code>eg: 
opacity:0.7;/*FF chrome safari opera*/
filter:alpha(opacity:70);/*用了ie滤镜,可以兼容ie*/
</code></pre><p>  但是,需要注意的是,opacity会影响里面元素的透明度</p>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>3.display:inline-block ie6/7不支持</p>
<p>  解决方案:<br></p>
<pre><code>display:inline-block; 
*display:inline;
</code></pre></li>
<li><p>4.默认的body没有body去掉margin情况下ie5、6、7边缘会很宽margin-top加倍  如果处于无声明状态那么所有的ie浏览器margin-top加倍</p>
<p>  解决方案:<br></p>
<pre><code>用css给body添加magin属性为0px 
body{margin:0;}
</code></pre></li>
<li><p>5.IE 6.0 Firefox Opera等是 真实宽度=width+padding+border    IE5.X 真实宽度=width</p>
<p>  解决方案：<br></p>
<p> 方法1：</p>
<pre><code>div.content {
    width:400px;  //这个是错误的width(对于ie5来说是正确的），所有浏览器都读到了 
    voice-family: &quot;\&quot;}\&quot;&quot;;  //IE5.X/win忽略了&quot;\&quot;}\&quot;&quot;后的内容` 
    voice-family:inherit; 
    width:300px;  //包括IE6/win在内的部分浏览器读到这句，新的数值(300px)覆盖掉了旧的 
}　
</code></pre><p> 方法2：</p>
<pre><code>div.content {
    width:300px !important;  //这个是正确的width，大部分支持!important标记的浏览器使用这里的数值 
    width(空格)/**/:400px;  //IE6/win不解析这句，所以IE6/win仍然认为width的值是300px；而IE5.X/win读到这句，新的数值(400px)覆盖掉了旧的，因为!important标记对他们不起作用 
}
</code></pre></li>
<li><p>6.height不能小于16px,设置较小高度标签（一般小于10px），在IE6，IE7，遨游中高度超出自己设置高度</p>
</li>
</ul>
<p>　　解决方案:overflow设置为hidden</p>
<ul>
<li><p>7.min-height不兼容  ie6 7解释为超过高度就撑开，而其他版本浏览器则遮盖下面的层</p>
<p>  解决方案:</p>
<pre><code>min-height:200px;
height:auto !important; 
height:200px; 
overflow:visible;
</code></pre></li>
<li><p>8.position:fixed  IE5、6无法识别此属性</p>
</li>
</ul>
<p>　　解决方案:</p>
<pre><code>&lt;!--[if lte IE 6]&gt;    
    &lt;style type=&quot;text/css&quot;&gt;
        html {
            /*这个可以让IE6下滚动时无抖动*/
            background: url(about:black) no-repeat fixed
        }
        #demo_t, #demo_b, #demo_l, #demo_r {
    　        position: absolute;
        }
        #demo_t, #demo_b {
　        /*这个解决body有padding时，IE6下100%不能铺满的问题*/
　            width: expression(offsetParent.clientWidth);
        }

        /*下面三组规则用于IE6下top计算*/
　        #demo_l, #demo_r {
　　            top: expression(offsetParent.scrollTop + 300);
        }
　        #demo_t {
　　　        top: expression(offsetParent.scrollTop);
        }
　        #demo_b {
　　　　        top: expression(offsetParent.scrollTop + offsetParent.clientHeight-offsetHeight);
　        }
    &lt;/style&gt;
&lt;![endif]--&gt;
</code></pre><ul>
<li>9.浮动的div有margin_left属性ie6会加倍  无论兼容视图还是无声明视图 </li>
</ul>
<p>　　解决方案:<br><br>　　　　方案一: IE6唯一识别属性_的方式加_display属性</p>
<pre><code>_display:inline;
</code></pre><p>　　　　方案二:</p>
<pre><code>条件注释
&lt;!--[if lte IE 6]&gt;
    &lt;style&gt;
        .on{ display:inline }
    &lt;/style&gt;
&lt;![endif]--&gt;
</code></pre><ul>
<li>10.cursor兼容  自定义指针cur格式的图片url路径问题无论是兼容还是无声明版本</li>
</ul>
<p>　　解决方案:<br></p>
<pre><code>cursor:url(Hand.cur), url(/Hand.cur), auto;
</code></pre><ul>
<li>11.png图片  IE6里面的png图片不能透明 兼容版本和无声明版本都是 </li>
</ul>
<p>　　解决方案:<br></p>
<pre><code>&lt;!--[if IE ]&gt;
    &lt;style type=&quot;text/css&quot;&gt;
        #DIVname{
　            background:none;
　　　　　　    filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true, sizingMethod=scale, src=&quot;pngtouming.png&quot;
        }

    &lt;/style&gt;
&lt;![endif]--&gt;
</code></pre><ul>
<li>12.img浮动  img标签打回车会造成每个图片之间有缝隙</li>
</ul>
<p>　　解决方案: 可以删除之间的回车键也可以让这些图片浮动</p>
<ul>
<li><p>13.在IE浏览器下 input type=”text”文本框点击时后面会出现”X”,以及type=”password”后面会出现眼睛,如何除去这两种默认样式:</p>
<pre><code>::-ms-clear,::-ms-reveal{display:none;}
</code></pre><p>　     注:IE9-不识别</p>
</li>
<li><p>14.CSS3前缀 </p>
<pre><code>-webkit-  webkit渲染引擎  chrome/safari &lt;br&gt;
-moz-   gecko渲染引擎   firefox &lt;br&gt;
-ms-    trident渲染引擎  IE &lt;br&gt;
-o-  　opeck渲染引擎　opera　&lt;br&gt;　
</code></pre><p>  动画、过渡、background-size 都需要加前缀</p>
<p>  eg:动画 <br></p>
<pre><code> @-webkit-keyframes name{
     0%{动画开始的css样式;}
     100%{动画结束的css样式;}
 }
 -webkit-animation:name 8s infinite linear;

过渡：&lt;br&gt;

 div.box{
     bottom:-40px;　  　
     -webkit-transition:all .3s ease-in-out 0s;
 }
</code></pre><p> 注:但是过渡不兼容IE8-,可以用JS动画实现 <br><br> background-size 同样也不支持IE8,可以考虑用img</p>
</li>
<li><p>15.渐变</p>
</li>
</ul>
<p>　　解决方案:</p>
<pre><code>filter: progid:DXImageTransform.Microsoft.Gradient(gradientType=0,startColorStr=#35FEA1,endColorStr=#6E9DFF); /*IE 6 7 8*/
    background: -ms-linear-gradient(top, #35FEA1,  #6E9DFF);/* IE 10 */
    background:-moz-linear-gradient(top, #35FEA1,  #6E9DFF); /*火狐*/
    background:-webkit-gradient(linear, 0% 0%, 0% 100%,from(#35FEA1), to(#6E9DFF));/*谷歌*/
    background: -webkit-gradient(linear, 0% 0%, 0% 100%,from(#35FEA1), to(#6E9DFF));/* Safari 4-5, Chrome 1-9*/
    background: -webkit-linear-gradient(top, #35FEA1,  #6E9DFF);/*Safari5.1 Chrome 10+*/
       background: -o-linear-gradient(top, #35FEA1,  #6E9DFF);/*Opera 11.10+*/
</code></pre><ul>
<li>16.PIE.htc 可以实现很多css3属性在IE下的兼容性 如:圆角、阴影、渐变</li>
</ul>
<p>(1) 圆角 border-radius</p>
<pre><code>.signBtn{
       height: 40px;
    background-color:#08BCD2;
       color: #fff;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px;
    behavior: url(css/PIE.htc);
} 
</code></pre><p>(2)阴影 box-shadow</p>
<pre><code>.box{
    width:200px; height:200px;
    -webkit-box-shadow:1px 0 10px;
    -moz-box-shadow:1px 0 10px;
    box-shadow: 1px 0 10px;
    background-color: #fff;
    behavior: url(css/PIE.htc);/*IE边框阴影*/
}
</code></pre><p>(3)背景透明rgba</p>
<pre><code>.box{
    background-color:rgba(12, 154, 171, 0.29);
    behavior: url(css/PIE.htc);
    -pie-background:rgba(12, 154, 171, 0.29);
}
</code></pre><p>(4)渐变</p>
<pre><code>.box{
    width:200px;
       height:400px;
       background:-webkit-gradient(linear, 0 0, 0 bottom, from(#9F9), to(#393));
       background:-moz-linear-gradient(#9F9, #393);
       -pie-background:linear-gradient(#9F9, #393);
       behavior:url(pie.htc);                
}
</code></pre><p>   注:PIE.htc文件路径相对是相对于css文件,并非html文件,以上例子是将PIE.htc文件放在与css样式文件同一个文件夹css内,而对应的html问价与css文件夹同级</p>
<ul>
<li><p>17.JS实现点击跳转到指定位置</p>
<pre><code>$(&quot;.arraw-bt&quot;).click(function(){
    var scroll_offset = $(&quot;#section&quot;).offset();
     console.log(scroll_offset);

    //如果只写body,只被chrome支持 Firefox和ie不支持
    $(&quot;body,html&quot;).animate({
         &quot;scrollTop&quot;:scroll_offset.top
     },0);//此处0写上会一下跳转到指定位置,若不写会有过渡效果
});
</code></pre></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.如果图片加a标签在IE9-中会有边框 &lt;/p&gt;
&lt;p&gt;  解决方案：&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;img{border:none;}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.rgba不支持IE8&lt;/p&gt;
&lt;p&gt;  解决方案：可以用 opacity&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eg: 
opacity:0.7;/*FF chrome safari opera*/
filter:alpha(opacity:70);/*用了ie滤镜,可以兼容ie*/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  但是,需要注意的是,opacity会影响里面元素的透明度&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="兼容问题" scheme="http://yoursite.com/categories/%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="兼容" scheme="http://yoursite.com/tags/%E5%85%BC%E5%AE%B9/"/>
    
  </entry>
  
  <entry>
    <title>如何在标题栏的title前添加网站logo</title>
    <link href="http://yoursite.com/2017/06/05/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%87%E9%A2%98%E6%A0%8F%E7%9A%84title%E5%89%8D%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%AB%99logo/"/>
    <id>http://yoursite.com/2017/06/05/如何在标题栏的title前添加网站logo/</id>
    <published>2017-06-05T02:40:16.000Z</published>
    <updated>2017-07-06T08:40:38.828Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>1.将像素大小为16*16的图片命名为 favicon.ico,(图片使用的颜色好像不能超过16色),放到网站根目录下就可以了;</li>
<li><p>2.在head标签中添加代码(这种方法图标可以随意命名,也可以不放在根目录下):</p>
<pre><code>标题栏: &lt;link rel=&quot;icon&quot; href=&quot;ico地址&quot; type=&quot;image/x-icon&quot;/&gt;
收藏夹: &lt;link rel=&quot;shortcut icon&quot; href=&quot;ico地址&quot; type=&quot;image/x-icon&quot;/&gt;
</code></pre></li>
</ul>
]]></content>
    
    <summary type="html">
    
      添加标签logo问题
    
    </summary>
    
    
      <category term="logo" scheme="http://yoursite.com/tags/logo/"/>
    
  </entry>
  
  <entry>
    <title>vue2.0变化 下</title>
    <link href="http://yoursite.com/2017/04/21/vue2.0%E5%8F%98%E5%8C%96%20%E4%B8%8B/"/>
    <id>http://yoursite.com/2017/04/21/vue2.0变化 下/</id>
    <published>2017-04-21T11:48:03.000Z</published>
    <updated>2017-07-05T06:29:37.958Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-vue2-0-vue动画-vue路由"><a href="#一-vue2-0-vue动画-vue路由" class="headerlink" title="一.vue2.0 vue动画+vue路由"></a>一.vue2.0 vue动画+vue路由</h3><ol>
<li><p>vue动画</p>
<a id="more"></a>
<p>transition 之前  属性<br><code>&lt;p transition=&quot;fade&quot;&gt;&lt;/p&gt;</code></p>
<p>.fade-transition{}<br>.fade-enter{}<br>.fade-leave{}</p>
<p>到2.0以后 transition 组件</p>
<p><code>&lt;transition name=&quot;fade&quot;&gt;
 运动东西(元素，属性、路由....)
&lt;/transition&gt;</code></p>
<p>class定义:<br>.fade-enter{}    //初始状态<br>.fade-enter-active{}  //变化成什么样  -&gt;  当元素出来(显示)</p>
<p>.fade-leave{}<br>.fade-leave-active{} //变成成什么样   -&gt; 当元素离开(消失)</p>
<p>如何animate.css配合用？<br> `<transition enter-active-class="animated zoomInLeft" leave-active-class="animated zoomOutRight"></transition></p>
<pre><code>&lt;p v-show=&quot;show&quot;&gt;&lt;/p&gt;
</code></pre><p> `</p>
<p>多个元素运动:<br> <code>&lt;transition-group enter-active-class=&quot;&quot; leave-active-class=&quot;&quot;&gt;
 &lt;p :key=&quot;&quot;&gt;&lt;/p&gt;
 &lt;p :key=&quot;&quot;&gt;&lt;/p&gt;
&lt;/transition-group&gt;</code></p>
</li>
<li><p>vue2.0 路由:<br><a href="http://router.vuejs.org/zh-cn/index.html" target="_blank" rel="external">http://router.vuejs.org/zh-cn/index.html</a><br>基本使用:</p>
<ol>
<li>布局 html部分<br><code>&lt;router-link to=&quot;/home&quot;&gt;主页&lt;/router-link&gt;</code><br><code>&lt;router-link to=&quot;/news&quot;&gt;新闻&lt;/router-link&gt;</code><br><code>&lt;router-view&gt;&lt;/router-view&gt;</code>//展示部分</li>
<li><p>路由具体写法<br> //组件 script部分<br> `var Home={</p>
<pre><code>template:&apos;&lt;h3&gt;我是主页&lt;/h3&gt;&apos;
</code></pre><p> };<code> </code>var News={</p>
<pre><code>template:&apos;&lt;h3&gt;我是新闻&lt;/h3&gt;&apos;
</code></pre><p> };`</p>
</li>
<li><p>配置路由<br> `const routes=[</p>
<pre><code>{path:&apos;/home&apos;, component:Home},
{path:&apos;/news&apos;, component:News}
</code></pre><p> ];`</p>
</li>
<li><p>生成路由实例<br> `const router=new VueRouter({</p>
<pre><code>routes
</code></pre><p> });`</p>
</li>
<li><p>最后挂到vue上<br> `new Vue({</p>
<pre><code>router,
el:&apos;#box&apos;
</code></pre><p> });`</p>
</li>
<li>重定向<br> 之前  <code>router.rediect  废弃了</code><br> 现在  <code>{path:&#39;*&#39;, redirect:&#39;/home&#39;}</code></li>
</ol>
</li>
</ol>
<p>路由嵌套:<br>    /user/username</p>
<pre><code>const routes=[
    {path:&apos;/home&apos;, component:Home},
    {
        path:&apos;/user&apos;,
        component:User,
        children:[  //核心
            {path:&apos;username&apos;, component:UserDetail}
        ]
    },
    {path:&apos;*&apos;, redirect:&apos;/home&apos;}  //404
];

user/strive/age/10

:id
:username
:age
</code></pre><p>路由实例方法:<br>    router.push({path:’home’});  //直接添加一个路由,表现切换路由，本质往历史记录里面添加一个<br>    router.replace({path:’news’}) //替换路由，不会往历史记录里面添加</p>
<h2 id="vue-cli"><a href="#vue-cli" class="headerlink" title="vue-cli"></a>vue-cli</h2><h2 id="npm-install"><a href="#npm-install" class="headerlink" title="npm install"></a>npm install</h2><p>脚手架:  vue-loader</p>
<h3 id="1-0-gt"><a href="#1-0-gt" class="headerlink" title="1.0  -&gt;"></a>1.0  -&gt;</h3><pre><code>`new Vue({
  el: &apos;#app&apos;,
  components:{App}
})`
</code></pre><h3 id="2-0-gt"><a href="#2-0-gt" class="headerlink" title="2.0-&gt;"></a>2.0-&gt;</h3><pre><code>`new Vue({
  el: &apos;#app&apos;,
  render: h =&gt; h(App)
})`
</code></pre><p>vue2.0<br>    <code>vue-loader和vue-router配合</code></p>
<p>style-loader    css-loader</p>
<pre><code>`style!css`
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-vue2-0-vue动画-vue路由&quot;&gt;&lt;a href=&quot;#一-vue2-0-vue动画-vue路由&quot; class=&quot;headerlink&quot; title=&quot;一.vue2.0 vue动画+vue路由&quot;&gt;&lt;/a&gt;一.vue2.0 vue动画+vue路由&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;vue动画&lt;/p&gt;
    
    </summary>
    
      <category term="vue文章" scheme="http://yoursite.com/categories/vue%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="vue2" scheme="http://yoursite.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>vue2.0变化 上</title>
    <link href="http://yoursite.com/2017/04/19/vue2.0%E5%8F%98%E5%8C%96%20%E4%B8%8A/"/>
    <id>http://yoursite.com/2017/04/19/vue2.0变化 上/</id>
    <published>2017-04-19T13:28:03.000Z</published>
    <updated>2017-07-05T06:29:40.570Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-vue2-0版本"><a href="#一-vue2-0版本" class="headerlink" title="一.vue2.0版本"></a>一.vue2.0版本</h3><pre><code>vue2.0:
bower info vue

http://vuejs.org/
</code></pre><p>到了2.0以后，有哪些变化?<br><a id="more"></a></p>
<ol>
<li>在每个组件模板，不在支持片段代码<br> 组件中模板:<pre><code>之前:
    `&lt;template&gt;
        &lt;h3&gt;我是组件&lt;/h3&gt;&lt;strong&gt;我是加粗标签&lt;/strong&gt;
    &lt;/template&gt;`
现在:  必须有根元素，包裹住所有的代码
    `&lt;template id=&quot;aaa&quot;&gt;
         &lt;div&gt;
            &lt;h3&gt;我是组件&lt;/h3&gt;
            &lt;strong&gt;我是加粗标签&lt;/strong&gt;
         &lt;/div&gt;
    &lt;/template&gt;`
</code></pre></li>
<li><p>关于组件定义<br> Vue.extend    这种方式，在2.0里面有，但是有一些改动，这种写法，即使能用，咱也不用——废弃</p>
<p> Vue.component(组件名称,{    在2.0继续能用</p>
<pre><code>data(){}
methods:{}
template:
</code></pre><p> });</p>
<p> 2.0推出一个组件，简洁定义方式：<br> var Home={</p>
<pre><code>template:&apos;&apos;        -&gt;   Vue.extend()
</code></pre><p> };</p>
</li>
<li>生命周期<br> 之前:<pre><code>init    
created
beforeCompile
compiled
ready        √    -&gt;     mounted
beforeDestroy    
destroyed
</code></pre> 现在:<pre><code>beforeCreate    组件实例刚刚被创建,属性都没有
created    实例已经创建完成，属性已经绑定
beforeMount    模板编译之前
mounted    模板编译之后，代替之前ready  *
beforeUpdate    组件更新之前
updated    组件更新完毕    *
beforeDestroy    组件销毁前
destroyed    组件销毁后
</code></pre></li>
<li><p>循环<br> 2.0里面默认就可以添加重复数据</p>
<p> arr.forEach(function(item,index){</p>
<p> });</p>
<p> 去掉了隐式一些变量</p>
<pre><code>$index    $key
</code></pre><p> 之前:</p>
<pre><code>v-for=&quot;(index,val) in array&quot;
</code></pre><p> 现在:</p>
<pre><code>v-for=&quot;(val,index) in array&quot;
</code></pre></li>
</ol>
<ol>
<li>track-by=”id”<br> 变成<pre><code>&lt;li v-for=&quot;(val,index) in list&quot; :key=&quot;index&quot;&gt;
</code></pre></li>
<li><p>自定义键盘指令<br> 之前：Vue.directive(‘on’).keyCodes.f1=17;    </p>
<p> 现在:  Vue.config.keyCodes.ctrl=17</p>
</li>
<li><p>过滤器<br> 之前:</p>
<pre><code>系统就自带很多过滤
{{msg | currency}}
{{msg | json}}
....
limitBy
filterBy
.....
</code></pre><p> 一些简单功能，自己通过js实现</p>
<p> 到了2.0， 内置过滤器，全部删除了</p>
<p> lodash    工具库    _.debounce(fn,200)</p>
<p> 自定义过滤器——还有</p>
<pre><code>但是,自定义过滤器传参

之前:    {{msg | toDou '12' '5'}}
现在:     {{msg | toDou('12','5')}}
</code></pre></li>
<li><p>组件通信:<br> vm.$emit();<br> vm.$on();</p>
<p> 父组件和子组件:</p>
<p> 子组件想要拿到父组件数据:</p>
<pre><code>通过  props
</code></pre><p> 之前，子组件可以更改父组件信息，可以是同步  sync<br> 现在，不允许直接给父级的数据，做赋值操作</p>
<p> 问题，就想更改：</p>
<pre><code>a). 父组件每次传一个对象给子组件, 对象之间引用    √
b). 只是不报错, mounted中转
</code></pre></li>
<li><p>可以单一事件管理组件通信:    vuex<br> var Event=new Vue();</p>
<p> Event.$emit(事件名称, 数据)</p>
<p> Event.$on(事件名称,function(data){</p>
<pre><code>//data
</code></pre><p> }.bind(this));</p>
</li>
<li><p>debounce    废弃<br>-&gt;   lodash</p>
<pre><code>_.debounce(fn,时间)
</code></pre></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-vue2-0版本&quot;&gt;&lt;a href=&quot;#一-vue2-0版本&quot; class=&quot;headerlink&quot; title=&quot;一.vue2.0版本&quot;&gt;&lt;/a&gt;一.vue2.0版本&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;vue2.0:
bower info vue

http://vuejs.org/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到了2.0以后，有哪些变化?&lt;br&gt;
    
    </summary>
    
      <category term="vue文章" scheme="http://yoursite.com/categories/vue%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="vue2" scheme="http://yoursite.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli--vue脚手架</title>
    <link href="http://yoursite.com/2017/04/17/vue-cli/"/>
    <id>http://yoursite.com/2017/04/17/vue-cli/</id>
    <published>2017-04-17T11:28:03.000Z</published>
    <updated>2017-07-05T06:28:27.438Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-vue-cli"><a href="#一-vue-cli" class="headerlink" title="一.vue-cli"></a>一.vue-cli</h3><ul>
<li><p>本身集成很多项目模板</p>
<ul>
<li>webpack  –[Eslint代码规范,单元测试,2个缩进, 适合大型项目] config文件夹下的index.js改端口</li>
<li>webpack-simple –[可以使用4个缩进]运行:npm run dev 改端口在mian.js文件中</li>
<li><p>simple </p>
</li>
<li><p>browserify</p>
</li>
<li>browserify-simple<a id="more"></a>
<h3 id="二-基本使用流程"><a href="#二-基本使用流程" class="headerlink" title="二. 基本使用流程"></a>二. 基本使用流程</h3></li>
</ul>
</li>
<li><ol>
<li>npm install vue-cli -g 安装vue命令环境 , 查看版本 vue-version (验证是否安装成功)</li>
</ol>
</li>
<li><ol>
<li>vue init &lt;名称&gt; 本地文件夹名称</li>
</ol>
</li>
<li><ol>
<li>进入到生成的目录里面</li>
</ol>
</li>
<li><ul>
<li>cd xxx<ul>
<li>npm install</li>
</ul>
</li>
</ul>
</li>
<li>4.npm run dev 运行</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-vue-cli&quot;&gt;&lt;a href=&quot;#一-vue-cli&quot; class=&quot;headerlink&quot; title=&quot;一.vue-cli&quot;&gt;&lt;/a&gt;一.vue-cli&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本身集成很多项目模板&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;webpack  –[Eslint代码规范,单元测试,2个缩进, 适合大型项目] config文件夹下的index.js改端口&lt;/li&gt;
&lt;li&gt;webpack-simple –[可以使用4个缩进]运行:npm run dev 改端口在mian.js文件中&lt;/li&gt;
&lt;li&gt;&lt;p&gt;simple &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;browserify&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;browserify-simple
    
    </summary>
    
      <category term="vue文章" scheme="http://yoursite.com/categories/vue%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="vue1" scheme="http://yoursite.com/tags/vue1/"/>
    
      <category term="vue2" scheme="http://yoursite.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>vue-router使用</title>
    <link href="http://yoursite.com/2017/04/16/vue-router/"/>
    <id>http://yoursite.com/2017/04/16/vue-router/</id>
    <published>2017-04-16T12:40:03.000Z</published>
    <updated>2017-07-05T06:28:29.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-vue1版本"><a href="#一-vue1版本" class="headerlink" title="一.vue1版本"></a>一.vue1版本</h3><pre><code>home    news 
</code></pre><ul>
<li><p>路由:<br>  vue-router</p>
<pre><code>-&gt;  如何查看版本:
    bower info vue-router
</code></pre><p>  路由使用版本: 0.7.13<br>配合vue-loader使用:</p>
</li>
</ul>
<a id="more"></a>
<ul>
<li></li>
</ul>
<ol>
<li>下载vue-router模块<br> cnpm install vue-router@0.7.13</li>
<li><p>import VueRouter from ‘vue-router’</p>
</li>
<li><p>Vue.use(VueRouter);</p>
</li>
<li><p>配置路由</p>
<ul>
<li><code>var router=new VueRouter();</code><br><code>import routerConfig from &#39;./router.config.js&#39;;</code><br><code>router.map(routerConfig);</code></li>
<li>(1) router.config.js部分 </li>
<li>// 引入</li>
<li><code>import mine from &#39;./components/Mine.vue&#39;;</code><br><code>import News from &#39;./components/News.vue&#39;;</code></li>
<li><p><code>import Login from &#39;./components/Login.vue&#39;;</code><br><code>import Reg from &#39;./components/Reg.vue&#39;;</code></p>
</li>
<li><p>// 导出<br>`export default {<br>  ‘/mine’:{</p>
<pre><code>component:Mine,
subRoutes:{//子路由
    &apos;login&apos;:{
        component:Login
     },
    &apos;reg&apos;:{
        component:Reg
    }
}
</code></pre><p>  },<br>  ‘/news’:{</p>
<pre><code>component:News
</code></pre><p>  }<br>}`</p>
</li>
</ul>
</li>
<li><p>开启<br> router.start(App,’#app’);</p>
</li>
</ol>
<p>注意:<br>    之前: index.html    -&gt;   <app></app><br>    现在: index.html    -&gt;   <div id="app"></div></p>
<pre><code>App.vue    -&gt;   需要一个 &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;  根元素
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-vue1版本&quot;&gt;&lt;a href=&quot;#一-vue1版本&quot; class=&quot;headerlink&quot; title=&quot;一.vue1版本&quot;&gt;&lt;/a&gt;一.vue1版本&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;home    news 
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;路由:&lt;br&gt;  vue-router&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-&amp;gt;  如何查看版本:
    bower info vue-router
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  路由使用版本: 0.7.13&lt;br&gt;配合vue-loader使用:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="vue文章" scheme="http://yoursite.com/categories/vue%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="vue1" scheme="http://yoursite.com/tags/vue1/"/>
    
      <category term="vue2" scheme="http://yoursite.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>第一个vue-jd项目</title>
    <link href="http://yoursite.com/2017/04/02/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAvue%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2017/04/02/搭建一个vue实例/</id>
    <published>2017-04-02T08:48:03.000Z</published>
    <updated>2017-07-05T06:29:35.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-在github上创建一个项目例如-vue-jd"><a href="#1-在github上创建一个项目例如-vue-jd" class="headerlink" title="1. 在github上创建一个项目例如:vue-jd"></a>1. 在github上创建一个项目例如:vue-jd</h1><ul>
<li>复制地址例如:<a href="https://github.com/wmlove/vue-jd.git" target="_blank" rel="external">https://github.com/wmlove/vue-jd.git</a><h1 id="2-在本地项目根目录下-已经下载了git的情况-右键启动Git-Bash命令行"><a href="#2-在本地项目根目录下-已经下载了git的情况-右键启动Git-Bash命令行" class="headerlink" title="2. 在本地项目根目录下(已经下载了git的情况), 右键启动Git Bash命令行"></a>2. 在本地项目根目录下(已经下载了git的情况), 右键启动Git Bash命令行</h1><a id="more"></a></li>
<li>2.1 把github上的项目拉下来. 如:git clone 地址 </li>
<li>2.2 cd vue-jd 进入托管项目的跟目录</li>
<li>2.2 git add 添加</li>
<li>2.3 git status 查看</li>
<li>2.4 git commit -m “changes log”  描述</li>
<li>2.5 git log 日志</li>
<li>2.5 git push -u origin master 提交</li>
<li>注意事项:</li>
<li>具体的git指令，可自行查看帮助（help）<h1 id="3-创建项目-已经安装了node和npm"><a href="#3-创建项目-已经安装了node和npm" class="headerlink" title="3. 创建项目 (已经安装了node和npm)"></a>3. 创建项目 (已经安装了node和npm)</h1></li>
<li>nodejs安装: <a href="http://blog.csdn.net/zzwwjjdj1/article/details/51980082" target="_blank" rel="external">http://blog.csdn.net/zzwwjjdj1/article/details/51980082</a></li>
<li>npm 介绍: <a href="http://blog.csdn.net/zzwwjjdj1/article/details/51982433" target="_blank" rel="external">http://blog.csdn.net/zzwwjjdj1/article/details/51982433</a></li>
<li>3.1 安装命令行工具 npm install -g vue-cli</li>
<li>3.2 vue -version 能看到版本号</li>
<li>3.3 创建项目框架 vue init webpack vue-jd[vue init webpack-simple vue-demo] (创建一个基于”webpack”的项目,后面是项目名)</li>
<li>安装依赖 </li>
<li>生成了项目以后是不能直接运行的,现在很多项目都依赖许许多多的模块,需要逐一安装,<br>ctrl+c 停掉刚生成项目的命令,cd vue-jd 进入项目跟目录, 用命令npm install 安装</li>
<li>dependencies是项目依赖,</li>
<li>devDependencies是开发时项目依赖.</li>
<li>运行测试 npm run dev</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-在github上创建一个项目例如-vue-jd&quot;&gt;&lt;a href=&quot;#1-在github上创建一个项目例如-vue-jd&quot; class=&quot;headerlink&quot; title=&quot;1. 在github上创建一个项目例如:vue-jd&quot;&gt;&lt;/a&gt;1. 在github上创建一个项目例如:vue-jd&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;复制地址例如:&lt;a href=&quot;https://github.com/wmlove/vue-jd.git&quot;&gt;https://github.com/wmlove/vue-jd.git&lt;/a&gt;&lt;h1 id=&quot;2-在本地项目根目录下-已经下载了git的情况-右键启动Git-Bash命令行&quot;&gt;&lt;a href=&quot;#2-在本地项目根目录下-已经下载了git的情况-右键启动Git-Bash命令行&quot; class=&quot;headerlink&quot; title=&quot;2. 在本地项目根目录下(已经下载了git的情况), 右键启动Git Bash命令行&quot;&gt;&lt;/a&gt;2. 在本地项目根目录下(已经下载了git的情况), 右键启动Git Bash命令行&lt;/h1&gt;
    
    </summary>
    
      <category term="vue文章" scheme="http://yoursite.com/categories/vue%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="vue2" scheme="http://yoursite.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>使用node.js实现网站在线聊天</title>
    <link href="http://yoursite.com/2017/02/23/%E4%BD%BF%E7%94%A8node.js%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%AB%99%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9/"/>
    <id>http://yoursite.com/2017/02/23/使用node.js实现网站在线聊天/</id>
    <published>2017-02-23T12:48:03.000Z</published>
    <updated>2017-07-06T06:57:49.672Z</updated>
    
    <content type="html"><![CDATA[<p>在本教程中，我们将构建一个实时的聊天系统的Node.js和socket.io库。 聊天允许用户创建私人聊天室，他们可以与朋友分享。 适合于虚拟形象，我们将使用的gravatar 。 您可以使用节点本地运行的聊天，或者它推到Heroku的或不同的云服务提供商。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>你可以从上面下载按钮抓取的源代码。 它有大量的注释，易于遵循。 先从app.js文件，并从那里读取。 这里有几件事情要寻找：</p>
<ul>
<li>所有依赖都在的package.json文件中声明。 它们不包含在zip，你将不得不执行npm install来获得它们。</li>
<li>我们使用的是单独的JavaScript文件的配置和路由，使代码更易于管理。</li>
<li>在routes文件，socket.io存储用户名，头像和房间的人作为socket对象本身的属性。 这为我们节省了大量的代码，并使得管理室方便。</li>
<li>我们使用socket.io的客房配备了从另一个隔离的聊天，而这正是该功能是为开发的。<h2 id="运行聊天"><a href="#运行聊天" class="headerlink" title="运行聊天"></a>运行聊天</h2></li>
</ul>
<p>要运行聊天，你需要安装node.js的 ，从而使node和npm命令可以从你的终端进行调用。 下载代码并解压缩归档到一个名为的NodeJS – 私 -​​ 网上聊天的文件夹。 在此之后，导航到你从你的终端创建的文件夹：</p>
<p>cd nodejs-private-webchat/</p>
<p>运行ls（或目录，如果你是在Windows上）的命令应该显示app.js，的package.json和其它文件从存档。 然后，运行这个命令来下载所有的聊天系统所使用的库：</p>
<p>npm install</p>
<p>这将安 ​​装所有在的package.json描述的依赖关系。 这可能需要一两分钟。 当它完成后，运行以下命令来启动你自己的本地聊天，你可以在输入<a href="http://localhost:8080看到" target="_blank" rel="external">http://localhost:8080看到</a></p>
<p>node app.js</p>
<p>按CTRL + C停止它。 坏消息是，你不能邀请你的朋友来聊天，因为它是你自己的电脑上运行。 为了解决这个问题，你需要在Web服务器上运行它。 建立一个Web服务器自己来运行节点不是一个非常简单的过程，涉及了大量的服务器管理技巧。 幸运的是，它是很容易上手的云平台，如Heroku的，这是什么，我会告诉你下一个。</p>
<h2 id="主办聊天在Heroku"><a href="#主办聊天在Heroku" class="headerlink" title="主办聊天在Heroku"></a>主办聊天在Heroku</h2><p>Heroku的是一个自动化的Web应用程序的部署和扩展一个云托管平台。 它提供了一个免费的计划，这足够满足我们的聊天不太繁忙的应用程序。 下面是你需要做的：</p>
<ol>
<li>创建一个帐户 ，如果你已经有一个。</li>
<li>安装Heroku toolbelt为您的操作系统。 它会给你访问heroku从终端窗口的命令。</li>
<li>初始化一个空的git仓库</li>
<li>把你的代码到Heroku的。 这将部署它，给你，你可以与你的朋友分享一个网址。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      node文章
    
    </summary>
    
      <category term="vue文章" scheme="http://yoursite.com/categories/vue%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>hexo 新建一篇文章并添加分类和标签</title>
    <link href="http://yoursite.com/2017/02/01/hexo-%E6%96%B0%E5%BB%BA%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2017/02/01/hexo-新建一篇文章并添加分类和标签/</id>
    <published>2017-02-01T15:47:44.000Z</published>
    <updated>2017-07-06T08:21:53.775Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>新建一个hexo文章</p>
<pre><code>hexo new &quot;Hexo教程&quot;
</code></pre></li>
<li><p>通过mou编辑器打开：添加tags和categories 或 直接打开markdown打开编辑</p>
<pre><code>---    
title: title #文章標題
date: 2017-06-01 23:47:44 #文章生成時間
categories: &quot;Hexo教程&quot; #文章分類目錄 可以省略
tags: #文章標籤 可以省略
     - 标签1
      - 标签2
 description: #你對本頁的描述 可以省略
---
</code></pre></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;新建一个hexo文章&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo new &amp;quot;Hexo教程&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过mou编辑器打开：添加tags和categories 或 直接打开markdown打开编辑&lt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://yoursite.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>vue项目中目录结构</title>
    <link href="http://yoursite.com/2016/01/16/vue-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2016/01/16/vue-目录结构/</id>
    <published>2016-01-16T05:58:41.000Z</published>
    <updated>2017-07-05T06:28:30.886Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-简单的目录结构"><a href="#一-简单的目录结构" class="headerlink" title="一.简单的目录结构"></a>一.简单的目录结构</h3><ul>
<li>index.html  </li>
<li>main.js — 入口文件</li>
<li>App.vue — vue文件,官方推荐命名法 : 首字母大写<ul>
<li>.vue文件:  放置的是vue组件代码<ul>
<li>html部分 用template标签</li>
<li>css部分  用style标签</li>
<li>js 部分  用script标签</li>
</ul>
</li>
</ul>
</li>
<li>package.json —工程文件(项目依赖/名称/配置)<ul>
<li>npm init –yes生成</li>
</ul>
</li>
<li>webpack.config.js — webpack配置文件</li>
</ul>
<a id="more"></a>
<h3 id="二-ES6-模块化开发"><a href="#二-ES6-模块化开发" class="headerlink" title="二.ES6:模块化开发"></a>二.ES6:模块化开发</h3><ul>
<li>导出模块:<ul>
<li>export default {}</li>
</ul>
</li>
<li>引入模块:<ul>
<li>import 模块名 from 地址<h3 id="三-所依赖包"><a href="#三-所依赖包" class="headerlink" title="三.所依赖包"></a>三.所依赖包</h3></li>
</ul>
</li>
</ul>
<ol>
<li>webpack部分<ul>
<li>npm install webpack@1.13.3 –save-dev</li>
<li>npm install webpack-dev-server@1.16.2 –save-dev</li>
</ul>
</li>
<li>loader部分(App.vue-&gt; 编译成正常代码 vue-loader@8.5.4)<ul>
<li>npm install vue-loader@8.5.4 –save-dev</li>
<li>npm install vue-html-loader –save-dev</li>
<li>npm install css-loader –save-dev</li>
<li>npm install vue-style-loader –save-dev</li>
<li>npm install vue-hot-reload-api@1.3.2 –save-dev</li>
</ul>
</li>
<li>babel部分 (把es6语法编译成es5语法)<ul>
<li>npm install babel-loader –save-dev</li>
<li>npm install babel-core –save-dev</li>
<li>npm install babel-plugin-transform-runtime –save-dev</li>
<li>npm install babel-preset-es2015 –save-dev</li>
<li>npm install babel-runtime –save-dev</li>
</ul>
</li>
<li>vue部分<ul>
<li>npm install vue@1.0.28 –save<h3 id="四-配置文件"><a href="#四-配置文件" class="headerlink" title="四.配置文件"></a>四.配置文件</h3>title: Hexo-wmの博客<br>subtitle: 宝剑锋从磨砺出，梅花香苦自苦寒来。<br>description: 做自己爱做的事，爱自己在做的事！<br>author: Min Wang<br>language: zh-CN<br>timezone: Asia/BeiJing</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      vue的目录结构和介绍
    
    </summary>
    
      <category term="vue文章" scheme="http://yoursite.com/categories/vue%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="vue1" scheme="http://yoursite.com/tags/vue1/"/>
    
      <category term="vue2" scheme="http://yoursite.com/tags/vue2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2015/04/01/hello-world/"/>
    <id>http://yoursite.com/2015/04/01/hello-world/</id>
    <published>2015-04-01T02:48:03.000Z</published>
    <updated>2017-07-06T09:02:26.101Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<p>在Github上部署静态网页<br><a href="http://blog.csdn.net/w1019945543/article/details/51955758" target="_blank" rel="external">http://blog.csdn.net/w1019945543/article/details/51955758</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
